{"version":3,"file":"cms.6fb7ba0a257ac48aece8.hot-update.js","sources":["webpack:///./src/components/home/slider/Slider.js"],"sourcesContent":["/** @jsx jsx */\nimport React, {useState, useEffect, useRef} from 'react'\nimport {css, jsx} from '@emotion/core'\nimport SliderContent from './SliderContent'\nimport Slide from './Slide'\nimport Arrow from './Arrow'\nimport Dots from './Dots'\n\nconst getWidth = () => window.innerWidth\n\n/**\n * @function Slider\n */\n\nconst Slider = props => {\n    const {slides, currentSlide, changeSlide, innerWidth} = props;\n    return (\n        <section css={innerWidth < 768 ? MobileSliderCSS : SliderCSS(innerWidth)}>\n            {\n                slides.map((s, i) => {\n                    return i === currentSlide ? <div\n                        className={currentSlide === i ? `zoom-in` : 'hidden-slide'}\n                        css={css`\n                          height: 100%;\n                          background-image: url('${slides[currentSlide].image.childImageSharp.fluid.src}');\n                          background-size: cover;\n                          transform:scale(1.05);\n                          background-repeat: no-repeat;\n                          background-position: center;\n                          transition: padding 0.3s;\n                          background-clip: content-box;\n    `}\n                    /> : ''\n                })\n\n            }\n            {/*<Arrow handleClick={() => {*/}\n            {/*    if (currentSlide === 0) {*/}\n            {/*        changeSlide(slides.length - 1);*/}\n            {/*    } else {*/}\n            {/*        changeSlide(currentSlide - 1);*/}\n            {/*    }*/}\n            {/*}}/>*/}\n            {/*<Arrow handleClick={() => {*/}\n            {/*    if (currentSlide === slides.length - 1) {*/}\n            {/*        changeSlide(0);*/}\n            {/*    } else {*/}\n            {/*        changeSlide(currentSlide + 1);*/}\n            {/*    }*/}\n            {/*}} direction={'right'}/>*/}\n            <div className=\"dotts-wrapper\">\n                {\n                    slides.map((s, i) => {\n                        return <div\n                            onClick={() => changeSlide(i)}\n                            className={`dot ${currentSlide === i ? 'active' : ''}`}\n                        />\n                    })\n                }\n            </div>\n        </section>\n    )\n}\n\nconst SliderCSS = (innerWidth) => css`\n  position: relative;\n  height: ${(innerWidth * 550) / 1266}px;\n  width: 100vw;\n  margin: 0 auto;\n  background-position: center;\n  background-size: cover;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst MobileSliderCSS = css`\n  position: relative;\n  height: 155px;\n  width: 100vw;\n  margin: 0 auto;\n  background-position: center;\n  background-size: cover;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nexport default Slider\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAUA;AAWA;AAAA;;;;;;;;;;AA9EA;AAMA;AAkDA;AAWA;;;;;;;;;;;;;;A","sourceRoot":""}