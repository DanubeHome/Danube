{"version":3,"file":"cms.a064bd8e82be369d40cd.hot-update.js","sources":["webpack:///./src/components/about/Portfolio.js"],"sourcesContent":["import React from 'react'\nimport {graphql, Link, StaticQuery} from 'gatsby'\n\nconst Portfolio = class extends React.Component {\n    render() {\n        const {data} = this.props;\n        if (!data) {\n            return <></>;\n        }\n\n\n        return (\n            <section className=\"portfolio-section\" id={\"ourportfolio\"}>\n                {\n                    data.map((category) => {\n                        return (\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <div className=\"section-heading text-theme\" style={{    background: '#CC1E1E',\n                                            color: 'white',\n                                            textAlign: 'left',\n                                            padding: '10px 20px',\n                                            marginBottom: '25px',\n                                            fontSize: '28px'}}>{category.node.frontmatter.title}</div>\n                                    </div>\n                                </div>\n                                    <div className=\"row\">\n                                    {\n                                        category.node.frontmatter.subCategories && category.node.frontmatter.subCategories.length ? category.node.frontmatter.subCategories.map((item, index) => {\n                                            return (\n                                                <>\n\n                                                        <div className=\"col-md-6 col-lg-4\" key={index}>\n                                                            <div className=\"portfolio-box position-relative\">\n                                                                <div className=\"portfolio-box-img\">\n                                                                    <Link to={category.node.fields.slug + item.urlSlug}\n                                                                          className=\"d-block\">\n                                                                        <img\n                                                                            src={!!item.images[0].image.childImageSharp ? item.images[0].image.childImageSharp.fluid.src : item.images[0].image}\n                                                                            alt=\"image\" className=\"img-fluid\"/>\n                                                                    </Link>\n                                                                </div>\n                                                                <div className=\"portfolio-box-info\">\n                                                                    <Link to={category.node.fields.slug + item.urlSlug}\n                                                                          className=\"title d-block pr-3\"\n                                                                          title=\"Furniture\">{item.title}</Link>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                </>\n                                            )\n                                        }) : ''\n                                    }\n                                    </div>\n                            </div>\n                        );\n                    })\n                }\n            </section>\n        )\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            active: false\n        }\n    }\n}\n\n\nexport default () => (\n    <StaticQuery\n        query={graphql`\n      {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"portfolio-page\" } } }\n        ) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                subCategories {\n                    title\n                    urlSlug\n                    subTitle\n                    images {\n                        image {\n                            childImageSharp {\n                                fluid(maxWidth: 580, quality: 62) {\n                                  ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                }\n              }\n            }\n          }\n        }\n  }\n    `}\n        render={(data, count) => <Portfolio data={data.allMarkdownRemark.edges}/>}\n    />\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAKA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;AAlEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAoEA;AAAA;AAEA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AADA;;;;;;;;;;AArEA;;;;;;;;;;;;;;A","sourceRoot":""}